"""Initial database schema

Revision ID: d935687dded7
Revises: 
Create Date: 2025-09-26 20:51:26.547760

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd935687dded7'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('device_trials',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_device_trials_fingerprint', 'device_trials', ['device_fingerprint'], unique=False)
    op.create_index('idx_device_trials_ip', 'device_trials', ['ip_address'], unique=False)
    op.create_index(op.f('ix_device_trials_device_fingerprint'), 'device_trials', ['device_fingerprint'], unique=True)
    op.create_index(op.f('ix_device_trials_ip_address'), 'device_trials', ['ip_address'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('subscription_plan', sa.String(length=50), nullable=False),
    sa.Column('subscription_status', sa.String(length=50), nullable=False),
    sa.Column('subscription_id', sa.String(length=255), nullable=True),
    sa.Column('trial_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('resumes',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('latex_content', sa.Text(), nullable=False),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_resumes_user_id', 'resumes', ['user_id'], unique=False)
    op.create_index(op.f('ix_resumes_user_id'), 'resumes', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('razorpay_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('plan_id', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('razorpay_subscription_id')
    )
    op.create_index('idx_subscriptions_user_id', 'subscriptions', ['user_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=False)
    op.create_table('usage_analytics',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usage_analytics_device', 'usage_analytics', ['device_fingerprint'], unique=False)
    op.create_index('idx_usage_analytics_user_id', 'usage_analytics', ['user_id'], unique=False)
    op.create_index(op.f('ix_usage_analytics_device_fingerprint'), 'usage_analytics', ['device_fingerprint'], unique=False)
    op.create_index(op.f('ix_usage_analytics_user_id'), 'usage_analytics', ['user_id'], unique=False)
    op.create_table('user_api_keys',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('encrypted_key', sa.Text(), nullable=False),
    sa.Column('key_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_validated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_api_keys_user_id'), 'user_api_keys', ['user_id'], unique=False)
    op.create_table('compilations',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('resume_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('job_id', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('pdf_path', sa.String(length=500), nullable=True),
    sa.Column('compilation_time', sa.Float(), nullable=True),
    sa.Column('pdf_size', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id')
    )
    op.create_index('idx_compilations_device', 'compilations', ['device_fingerprint'], unique=False)
    op.create_index('idx_compilations_user_id', 'compilations', ['user_id'], unique=False)
    op.create_index(op.f('ix_compilations_device_fingerprint'), 'compilations', ['device_fingerprint'], unique=False)
    op.create_index(op.f('ix_compilations_user_id'), 'compilations', ['user_id'], unique=False)
    op.create_table('optimizations',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('resume_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('job_description', sa.Text(), nullable=False),
    sa.Column('original_latex', sa.Text(), nullable=False),
    sa.Column('optimized_latex', sa.Text(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('optimization_time', sa.Float(), nullable=True),
    sa.Column('ats_score', sa.JSON(), nullable=True),
    sa.Column('changes_made', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_optimizations_user_id', 'optimizations', ['user_id'], unique=False)
    op.create_index(op.f('ix_optimizations_user_id'), 'optimizations', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('subscription_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('razorpay_payment_id', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('razorpay_payment_id')
    )
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_optimizations_user_id'), table_name='optimizations')
    op.drop_index('idx_optimizations_user_id', table_name='optimizations')
    op.drop_table('optimizations')
    op.drop_index(op.f('ix_compilations_user_id'), table_name='compilations')
    op.drop_index(op.f('ix_compilations_device_fingerprint'), table_name='compilations')
    op.drop_index('idx_compilations_user_id', table_name='compilations')
    op.drop_index('idx_compilations_device', table_name='compilations')
    op.drop_table('compilations')
    op.drop_index(op.f('ix_user_api_keys_user_id'), table_name='user_api_keys')
    op.drop_table('user_api_keys')
    op.drop_index(op.f('ix_usage_analytics_user_id'), table_name='usage_analytics')
    op.drop_index(op.f('ix_usage_analytics_device_fingerprint'), table_name='usage_analytics')
    op.drop_index('idx_usage_analytics_user_id', table_name='usage_analytics')
    op.drop_index('idx_usage_analytics_device', table_name='usage_analytics')
    op.drop_table('usage_analytics')
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_index('idx_subscriptions_user_id', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_resumes_user_id'), table_name='resumes')
    op.drop_index('idx_resumes_user_id', table_name='resumes')
    op.drop_table('resumes')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_device_trials_ip_address'), table_name='device_trials')
    op.drop_index(op.f('ix_device_trials_device_fingerprint'), table_name='device_trials')
    op.drop_index('idx_device_trials_ip', table_name='device_trials')
    op.drop_index('idx_device_trials_fingerprint', table_name='device_trials')
    op.drop_table('device_trials')
    # ### end Alembic commands ###
